{"ast":null,"code":"// OPEN MODAL ADD_NEW\nexport const addNewModal = () => {\n  return {\n    type: \"ADD_NEW\"\n  };\n}; // CLOSE MODALS\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n}; // EDIT TASK MODAL\n\nexport const editTaskButton = taskObject => {\n  return {\n    type: \"EDIT_BUTTON\",\n    payload: taskObject\n  };\n}; // LOGIN MODAL\n\nexport const loginModal = () => {\n  return {\n    type: \"LOGIN_MODAL\"\n  };\n}; // LOGIN ACTION\n\nexport const loginAction = credentials => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: \"LOGIN\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // LOGOUT ACTION\n\nexport const logoutAction = () => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => dispatch({\n      type: \"LOGOUT\"\n    })).catch(err => {\n      console.log(err);\n    });\n  };\n}; // SIGN UP ACTION\n\nexport const signUpAction = credentials => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().createUserWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: \"LOGIN\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}; // ADD NEW TASK\n\nexport const addNewTask = taskObject => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const fireStore = getFirestore();\n    fireStore.collection(\"Tasks\").add(taskObject).then(object => {\n      dispatch({\n        type: \"CREATE_NEW_TASK\",\n        payload: taskObject\n      });\n    }).then(() => {\n      dispatch({\n        type: \"CLOSE_MODAL\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"ADD_TASK_ERROR\"\n      });\n    });\n  };\n}; // DELETE TASK\n\nexport const deleteTask = taskObject => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const fireStore = getFirestore();\n    fireStore.collection(\"Tasks\").doc(taskObject.id).delete().then(() => {\n      dispatch({\n        type: \"DELETE_TASK\"\n      });\n    }).catch(() => {\n      return {\n        type: \"DELETE_TASK_ERROR\"\n      };\n    });\n  };\n}; // UPDATE TASK\n\nexport const updateTask = (taskObject, id) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const fireStore = getFirestore();\n    fireStore.collection(\"Tasks\").doc(id).update(taskObject).then(() => {\n      dispatch({\n        type: \"UPDATE_TASK\"\n      });\n    }).then(() => {\n      dispatch({\n        type: \"CLOSE_MODAL\"\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"UPDATE_TASK_ERROR\"\n      });\n    });\n  };\n}; // ADD NEW CATEGORY\n\nexport const addNewCategory = (newCategory, updateInput) => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    console.log(updateInput);\n    const fireStore = getFirestore();\n    fireStore.collection(\"Categories\").add(newCategory).then(() => {\n      dispatch({\n        type: \"ADD_NEW_CATEGORY\"\n      });\n    }).then(() => updateInput(\"\")).catch(err => {\n      dispatch({\n        type: \"ADD_CATEGORY_ERROR\"\n      });\n    });\n  };\n}; // REMOVE CATEGORY\n\nexport const removeCategory = cat => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    console.log(cat);\n    const fireStore = getFirestore();\n    fireStore.collection(\"Categories\").doc(cat.id).delete();\n  };\n};","map":{"version":3,"sources":["/Users/kicba/Downloads/todoapp/src/store/actions.js"],"names":["addNewModal","type","closeModal","editTaskButton","taskObject","payload","loginModal","loginAction","credentials","dispatch","getState","getFirebase","getFirestore","firebase","auth","signInWithEmailAndPassword","email","password","then","catch","err","console","log","logoutAction","signOut","signUpAction","createUserWithEmailAndPassword","addNewTask","fireStore","collection","add","object","deleteTask","doc","id","delete","updateTask","update","addNewCategory","newCategory","updateInput","removeCategory","cat"],"mappings":"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","sourcesContent":["// OPEN MODAL ADD_NEW\n\nexport const addNewModal = () => {\n  return {\n    type: \"ADD_NEW\",\n  };\n};\n\n// CLOSE MODALS\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\",\n  };\n};\n\n// EDIT TASK MODAL\n\nexport const editTaskButton = (taskObject) => {\n  return {\n    type: \"EDIT_BUTTON\",\n    payload: taskObject,\n  };\n};\n\n// LOGIN MODAL\n\nexport const loginModal = () => {\n  return {\n    type: \"LOGIN_MODAL\",\n  };\n};\n\n// LOGIN ACTION\n\nexport const loginAction = (credentials) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// LOGOUT ACTION\n\nexport const logoutAction = () => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => dispatch({ type: \"LOGOUT\" }))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// SIGN UP ACTION\n\nexport const signUpAction = (credentials) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// ADD NEW TASK\n\nexport const addNewTask = (taskObject) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const fireStore = getFirestore();\n\n    fireStore\n      .collection(\"Tasks\")\n      .add(taskObject)\n      .then((object) => {\n        dispatch({ type: \"CREATE_NEW_TASK\", payload: taskObject });\n      })\n      .then(() => {\n        dispatch({ type: \"CLOSE_MODAL\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"ADD_TASK_ERROR\" });\n      });\n  };\n};\n\n// DELETE TASK\n\nexport const deleteTask = (taskObject) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const fireStore = getFirestore();\n\n    fireStore\n      .collection(\"Tasks\")\n      .doc(taskObject.id)\n      .delete()\n      .then(() => {\n        dispatch({\n          type: \"DELETE_TASK\",\n        });\n      })\n      .catch(() => {\n        return {\n          type: \"DELETE_TASK_ERROR\",\n        };\n      });\n  };\n};\n\n// UPDATE TASK\n\nexport const updateTask = (taskObject, id) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const fireStore = getFirestore();\n\n    fireStore\n      .collection(\"Tasks\")\n      .doc(id)\n      .update(taskObject)\n      .then(() => {\n        dispatch({ type: \"UPDATE_TASK\" });\n      })\n      .then(() => {\n        dispatch({ type: \"CLOSE_MODAL\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"UPDATE_TASK_ERROR\" });\n      });\n  };\n};\n\n// ADD NEW CATEGORY\n\nexport const addNewCategory = (newCategory, updateInput) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    console.log(updateInput);\n    const fireStore = getFirestore();\n    fireStore\n      .collection(\"Categories\")\n      .add(newCategory)\n      .then(() => {\n        dispatch({ type: \"ADD_NEW_CATEGORY\" });\n      })\n      .then(() => updateInput(\"\"))\n      .catch((err) => {\n        dispatch({ type: \"ADD_CATEGORY_ERROR\" });\n      });\n  };\n};\n\n// REMOVE CATEGORY\n\nexport const removeCategory = (cat) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    console.log(cat);\n\n    const fireStore = getFirestore();\n\n    fireStore.collection(\"Categories\").doc(cat.id).delete();\n  };\n};\n"]},"metadata":{},"sourceType":"module"}