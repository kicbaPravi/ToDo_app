{"ast":null,"code":"var _jsxFileName = \"/Users/slobodanperusinovic/work/myapps/todoapp/src/components/Add_New_Modal.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { closeModal, addNewTask } from \"../store/actions\";\nimport Datepicker from \"react-datepicker\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Modal = ({\n  categories\n}) => {\n  const dispatch = useDispatch();\n  const [name, updateName] = useState(\"\");\n  const [priority, updatePriority] = useState(\"\");\n  const [category, updateCategory] = useState(\"\");\n  const [date, updateDate] = useState(new Date());\n  const task = {\n    name,\n    priority,\n    category,\n    date\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: () => dispatch(closeModal()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Add new task\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name Of Task\",\n    name: \"name\",\n    onChange: e => updateName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch(addNewTask(task)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"ADD\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-star fa-3x\",\n    onClick: () => updatePriority(\"1\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-star fa-3x\",\n    onClick: () => updatePriority(\"2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-star fa-3x\",\n    onClick: () => updatePriority(\"3\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-star fa-3x\",\n    onClick: () => updatePriority(\"4\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-star fa-3x\",\n    onClick: () => updatePriority(\"5\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => updateCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"select\"), categories && categories.map(cat => /*#__PURE__*/React.createElement(\"option\", {\n    value: cat.name,\n    key: cat.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, cat.name))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Datepicker, {\n    selected: date,\n    calendarClassName: \"rasta-stripes\",\n    onChange: e => updateDate(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.firestore.ordered.Categories\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  closeModal,\n  addNewTask\n}), firestoreConnect(() => [{\n  collection: \"Categories\"\n}]))(Modal);","map":{"version":3,"sources":["/Users/slobodanperusinovic/work/myapps/todoapp/src/components/Add_New_Modal.js"],"names":["React","useState","useDispatch","connect","closeModal","addNewTask","Datepicker","compose","firestoreConnect","FontAwesomeIcon","faPlus","Modal","categories","dispatch","name","updateName","priority","updatePriority","category","updateCategory","date","updateDate","Date","task","e","target","value","map","cat","id","mapStateToProps","state","firestore","ordered","Categories","collection"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { closeModal, addNewTask } from \"../store/actions\";\nimport Datepicker from \"react-datepicker\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\n\nconst Modal = ({ categories }) => {\n  const dispatch = useDispatch();\n\n  const [name, updateName] = useState(\"\");\n  const [priority, updatePriority] = useState(\"\");\n  const [category, updateCategory] = useState(\"\");\n  const [date, updateDate] = useState(new Date());\n\n  const task = {\n    name,\n    priority,\n    category,\n    date,\n  };\n\n  return (\n    <div className=\"bg-modal\">\n      <div className=\"modal-content\">\n        <div className=\"close\" onClick={() => dispatch(closeModal())}></div>\n        <h1>Add new task</h1>\n        <form className=\"example\">\n          {/* INPUT */}\n\n          <input\n            type=\"text\"\n            placeholder=\"Name Of Task\"\n            name=\"name\"\n            onChange={(e) => updateName(e.target.value)}\n          />\n          <button type=\"button\" onClick={() => dispatch(addNewTask(task))}>\n            ADD\n          </button>\n\n          {/* PRIORITY */}\n          <h1>Priority</h1>\n          <span\n            className=\"fa fa-star fa-3x\"\n            onClick={() => updatePriority(\"1\")}\n          ></span>\n          <span\n            className=\"fa fa-star fa-3x\"\n            onClick={() => updatePriority(\"2\")}\n          ></span>\n          <span\n            className=\"fa fa-star fa-3x\"\n            onClick={() => updatePriority(\"3\")}\n          ></span>\n          <span\n            className=\"fa fa-star fa-3x\"\n            onClick={() => updatePriority(\"4\")}\n          ></span>\n          <span\n            className=\"fa fa-star fa-3x\"\n            onClick={() => updatePriority(\"5\")}\n          ></span>\n\n          {/* CATEGORY */}\n\n          <h1>Category</h1>\n          <select\n            value={category}\n            onChange={(e) => updateCategory(e.target.value)}\n          >\n            <option>select</option>\n            {categories &&\n              categories.map((cat) => (\n                <option value={cat.name} key={cat.id}>\n                  {cat.name}\n                </option>\n              ))}\n          </select>\n\n          {/* DATE */}\n\n          <h1>Date</h1>\n          <Datepicker\n            selected={date}\n            calendarClassName=\"rasta-stripes\"\n            onChange={(e) => updateDate(e)}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.firestore.ordered.Categories,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { closeModal, addNewTask }),\n  firestoreConnect(() => [{ collection: \"Categories\" }])\n)(Modal);\n"]},"metadata":{},"sourceType":"module"}